name: integration

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'dist/**'
      - 'src/**'
      - 'action.yml'
      - 'yarn.lock'

jobs:
  e2e:
    name: End-to-end test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.SIGNER_AWS_IAM_ROLE_ARN }}
          role-duration-seconds: 900
          role-session-name: AwsLambdaCodeSigningAction

      - name: Get archive version
        run: |
          LATEST_VERSION=$(aws s3api list-object-versions --bucket ${{ secrets.AWS_S3_BUCKET }} --prefix unsigned/dist.zip --query 'Versions[?IsLatest].[VersionId]' --output text)
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Test
        uses: ./
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          source-s3-bucket: ${{ secrets.AWS_S3_BUCKET }}
          source-s3-key: unsigned/dist.zip
          source-s3-version: ${{ env.LATEST_VERSION }}
          destination-s3-bucket: ${{ secrets.AWS_S3_BUCKET }}
          destination-s3-prefix: signed/
          profile-name: ${{ secrets.AWS_SIGNING_PROFILE_NAME }}
          wait-until-successful: true
          max-wait-time: 120

      # - name: Start signing job
      #   run: |
      #     echo ${{ env.LATEST_VERSION }}
      #     aws signer start-signing-job \
      #       --source 's3={bucketName=${{ secrets.AWS_S3_BUCKET}},version=${{ env.LATEST_VERSION }},key=unsigned/dist.zip}' \
      #       --destination 's3={bucketName=${{ secrets.AWS_S3_BUCKET}},prefix=signed-}' \
      #       --profile-name ${{ secrets.AWS_SIGNING_PROFILE_NAME }}
